package ${package}.core.${moduleName}.repository.impl;

import com.baomidou.mybatisplus.core.conditions.query.LambdaQueryWrapper;
import com.baomidou.mybatisplus.core.toolkit.Wrappers;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
import cn.javaquan.common.base.message.BasePage;
import cn.javaquan.common.base.message.PageResult;
import ${package}.core.convert.PageAssembler;
import ${package}.core.convert.PageResultAssembler;
import ${package}.core.${moduleName}.entity.${className}PO;
import ${package}.core.${moduleName}.mapper.${className}Mapper;
import ${package}.core.${moduleName}.repository.${className}Repository;
import org.springframework.stereotype.Repository;

/**
 * ${comments}
 *
 * @author ${author}
 * @version ${version}
 * @date ${datetime}
 */
@Repository
public class ${className}RepositoryImpl extends ServiceImpl<${className}Mapper, ${className}PO> implements ${className}Repository {

    @Override
    public PageResult<${className}PO> page(${className}PO po, BasePage basePage) {
        Page<${className}PO> page = PageAssembler.INSTANCE.toPage(basePage);
        LambdaQueryWrapper<${className}PO> queryWrapper = Wrappers.lambdaQuery(po);
        page = this.page(page, queryWrapper);
        return PageResultAssembler.INSTANCE.toPageResult(page);
    }

}
