package ${package}.core.${moduleName}.convert;

import ${package}.common.module.${moduleName}.${className}AddCommand;
import ${package}.common.module.${moduleName}.${className}Query;
import ${package}.common.module.${moduleName}.${className}UpdateCommand;
import ${package}.core.${moduleName}.entity.${className}PO;
import org.mapstruct.Mapper;
import org.mapstruct.Mapping;
import org.mapstruct.factory.Mappers;

import java.util.List;

/**
 * ${comments}参数转换
 *
 * @author ${author}
 * @version ${version}
 * @date ${datetime}
 */
@Mapper
public interface ${className}Assembler {

    ${className}Assembler INSTANCE = Mappers.getMapper(${className}Assembler.class);

    /**
     * 转换为查询参数
     *
     * @param query
     * @return
     */
    ${className}PO toQueryPO(${className}Query query);

    /**
     * 转换为更新参数
     * <p>
     * 更新自动配置更新时间。
     * 更新时不处理删除状态，删除状态交由删除功能处理。
     *
     * @param cmd
     * @return
     */
    @Mapping(target = "delFlag", ignore = true)
    ${className}PO toUpdatePO(${className}UpdateCommand cmd);

    /**
     * 转换为新增参数
     * <p>
     * 新增时删除状态默认为正常。
     *
     * @param cmd
     * @return
     */
    @Mapping(target = "delFlag", constant = "false")
    ${className}PO toAddPO(${className}AddCommand cmd);

    /**
     * 转换为新增参数
     *
     * @param cmds
     * @return
     */
    List<${className}PO> toAddPOS(List<${className}AddCommand> cmds);
}
