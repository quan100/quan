package ${package}.service.${moduleName}.feign.fallback;

import ${package}.common.module.${moduleName}.${className}AddCommand;
import ${package}.common.module.${moduleName}.${className}Query;
import ${package}.common.module.${moduleName}.${className}UpdateCommand;
import ${mainPath}.common.base.message.Result;
import ${package}.service.${moduleName}.feign.${className}RepositoryFeign;
import lombok.extern.slf4j.Slf4j;
import org.springframework.cloud.openfeign.FallbackFactory;
import org.springframework.stereotype.Component;

import java.util.List;

/**
 * ${comments}
 *
 * @author ${author}
 * @version ${version}
 * @date ${datetime}
 */
@Slf4j
@Component
public class ${className}RepositoryFallback implements FallbackFactory<${className}RepositoryFeign> {

    @Override
    public ${className}RepositoryFeign create(Throwable throwable) {
        return new ${className}RepositoryFeign() {
            @Override
            public Result page(${className}Query query) {
                return Result.fail(throwable.getMessage());
            }

            @Override
            public Result details(${pk.attrType} ${pk.attrname}) {
                return Result.fail(throwable.getMessage());
            }

            @Override
            public Result update(${className}UpdateCommand cmd) {
                return Result.fail(throwable.getMessage());
            }

            @Override
            public Result save(${className}AddCommand cmd) {
                return Result.fail(throwable.getMessage());
            }

            @Override
            public Result saveBatch(List<${className}AddCommand> cmds) {
                return Result.fail(throwable.getMessage());
            }

            @Override
            public Result deleteByIds(List<${pk.attrType}> ${pk.attrname}s) {
                return Result.fail(throwable.getMessage());
            }
        };
    }
}
